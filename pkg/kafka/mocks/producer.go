// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	confluent_kafka_gokafka "github.com/confluentinc/confluent-kafka-go/kafka"

	mock "github.com/stretchr/testify/mock"
)

// Producer is an autogenerated mock type for the Producer type
type Producer struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Producer) Close() {
	_m.Called()
}

// Flush provides a mock function with given fields: timoutMs
func (_m *Producer) Flush(timoutMs int) int {
	ret := _m.Called(timoutMs)

	var r0 int
	if rf, ok := ret.Get(0).(func(int) int); ok {
		r0 = rf(timoutMs)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Produce provides a mock function with given fields: msg, deliveryChan
func (_m *Producer) Produce(msg *confluent_kafka_gokafka.Message, deliveryChan chan confluent_kafka_gokafka.Event) error {
	ret := _m.Called(msg, deliveryChan)

	var r0 error
	if rf, ok := ret.Get(0).(func(*confluent_kafka_gokafka.Message, chan confluent_kafka_gokafka.Event) error); ok {
		r0 = rf(msg, deliveryChan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
