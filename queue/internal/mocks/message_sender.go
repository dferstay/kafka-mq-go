// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	kafka "github.com/confluentinc/confluent-kafka-go/kafka"

	mock "github.com/stretchr/testify/mock"
)

// MessageSender is an autogenerated mock type for the MessageSender type
type MessageSender struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MessageSender) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Flush provides a mock function with given fields: ctx
func (_m *MessageSender) Flush(ctx context.Context) {
	_m.Called(ctx)
}

// SendMessage provides a mock function with given fields: queueID, payload
func (_m *MessageSender) SendMessage(queueID string, payload []byte) error {
	ret := _m.Called(queueID, payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte) error); ok {
		r0 = rf(queueID, payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendMessageAsync provides a mock function with given fields: queueID, payload, deliveryCh
func (_m *MessageSender) SendMessageAsync(queueID string, payload []byte, deliveryCh chan kafka.Event) {
	_m.Called(queueID, payload, deliveryCh)
}
