// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	kafka "github.com/confluentinc/confluent-kafka-go/kafka"
	mock "github.com/stretchr/testify/mock"
)

// Producer is an autogenerated mock type for the Producer type
type Producer struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Producer) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Flush provides a mock function with given fields: ctx
func (_m *Producer) Flush(ctx context.Context) {
	_m.Called(ctx)
}

// Send provides a mock function with given fields: payload
func (_m *Producer) Send(payload []byte) error {
	ret := _m.Called(payload)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendAsync provides a mock function with given fields: payload, deliveryCh
func (_m *Producer) SendAsync(payload []byte, deliveryCh chan kafka.Event) {
	_m.Called(payload, deliveryCh)
}
