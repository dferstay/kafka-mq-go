// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	kafka "github.com/confluentinc/confluent-kafka-go/kafka"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// AssignedPartition is an autogenerated mock type for the AssignedPartition type
type AssignedPartition struct {
	mock.Mock
}

// AddMessage provides a mock function with given fields: msg, now
func (_m *AssignedPartition) AddMessage(msg *kafka.Message, now time.Time) error {
	ret := _m.Called(msg, now)

	var r0 error
	if rf, ok := ret.Get(0).(func(*kafka.Message, time.Time) error); ok {
		r0 = rf(msg, now)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *AssignedPartition) Close() {
	_m.Called()
}

// Redeliver provides a mock function with given fields: now
func (_m *AssignedPartition) Redeliver(now time.Time) {
	_m.Called(now)
}

// SmallestMarkerOffset provides a mock function with given fields:
func (_m *AssignedPartition) SmallestMarkerOffset() (int64, bool) {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func() bool); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}
